name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
      - staging
  pull_request:
    branches:
      - main
      - dev
      - staging

env:
  TF_IN_AUTOMATION: true
  TF_INPUT: false
  TFVARS_FILE: terraform.tfvars
  AWS_REGION: us-east-1

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        run: |
          curl -o terraform.zip https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
          unzip -o terraform.zip
          sudo mv terraform /usr/local/bin/

      - name: Show directory (debug)
        run: ls -R

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Decode terraform.tfvars from secret
        run: |
          mkdir -p terraform
          echo "${{ secrets.TFVARS_BASE64 }}" | base64 -d > terraform/${{ env.TFVARS_FILE }}

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Format & Validate
        working-directory: terraform
        run: |
          terraform fmt -check
          terraform validate

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -var-file=${{ env.TFVARS_FILE }}

      - name: Terraform Apply (main only)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        working-directory: terraform
        run: terraform apply -auto-approve -var-file=${{ env.TFVARS_FILE }}

  docker-and-test:
    name: Build & Test Flask App
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: app
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Flask App Test
        working-directory: app
        run: |
          python app.py &  # run in background
          sleep 3
          curl --fail http://localhost:8080/health

      - name: Build Docker Image
        working-directory: app
        run: docker build -t devops-app .
