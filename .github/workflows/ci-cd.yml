name: CI/CD Pipeline

on:
  push:
    branches: [main, dev, staging]
  pull_request:
    branches: [main, dev, staging]

env:
  TF_IN_AUTOMATION: true
  TF_INPUT: false
  AWS_REGION: us-east-1
  TFVARS_FILE: terraform.tfvars

jobs:
  terraform:
    name: Terraform Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        run: |
          curl -o terraform.zip https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
          unzip -o terraform.zip
          sudo mv terraform /usr/local/bin/terraform

      - name: Decode tfvars from GitHub Secret
        run: |
          echo "${{ secrets.TFVARS_BASE64 }}" | base64 -d > terraform/terraform.tfvars

      - name: Terraform Format
        run: terraform fmt -recursive -check

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -var-file=terraform.tfvars

      - name: Terraform Apply (main only)
        if: github.ref == 'refs/heads/main'
        working-directory: terraform
        run: terraform apply -auto-approve -var-file=terraform.tfvars

  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Print Working Directory and List Files (Debug)
        run: |
          echo "PWD: $(pwd)"
          ls -R

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker Image
        run: |
          docker build -t devops-flask-app ./app

      - name: Tag & Push to ECR
        env:
          AWS_ACCOUNT_ID: 553561694715
          IMAGE_NAME: devops-app
        run: |
          IMAGE_TAG=latest
          ECR_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${IMAGE_NAME}
          docker tag devops-flask-app $ECR_URI:$IMAGE_TAG
          docker push $ECR_URI:$IMAGE_TAG
