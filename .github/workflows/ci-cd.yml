name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
      - staging
  pull_request:
    branches:
      - main
      - dev
      - staging

env:
  TF_IN_AUTOMATION: true
  TF_INPUT: false

jobs:
  terraform:
    name: Terraform CI/CD
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: us-east-1
      ENV_NAME: ${{ github.ref_name }}
      TFVARS_FILE: terraform.tfvars

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        run: |
          curl -o terraform.zip https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
          unzip -o terraform.zip
          sudo mv terraform /usr/local/bin/

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::553561694715:role/github-actions-role
          aws-region: ${{ env.AWS_REGION }}

      - name: Decode .tfvars from Secret
        run: |
          echo "${{ secrets.TFVARS_BASE64 }}" | base64 -d > $TFVARS_FILE

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Format & Validate
        run: terraform -chdir=terraform fmt -check && terraform -chdir=terraform validate

      - name: Terraform Plan
        run: terraform -chdir=terraform plan -var-file=../${{ env.TFVARS_FILE }}

      - name: Terraform Apply (only on main)
        if: github.ref == 'refs/heads/main'
        run: terraform -chdir=terraform apply -auto-approve -var-file=../${{ env.TFVARS_FILE }}

      - name: Auto-unlock on Failure
        if: failure()
        run: |
          terraform -chdir=terraform force-unlock -force $(terraform -chdir=terraform show -json | jq -r '.serial')
